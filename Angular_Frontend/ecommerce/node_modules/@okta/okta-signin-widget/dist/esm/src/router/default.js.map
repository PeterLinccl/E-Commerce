{"version":3,"file":"default.js","sources":["../../../../src/router/default.ts"],"sourcesContent":["\n// Default router factory will detect between classic and OIE pipeline\nimport Util from 'util/Util';\nimport V1Router from 'v1/LoginRouter';\nimport V2Router from 'v2/WidgetRouter';\n\nimport { RouterConstructor, WidgetOptions } from 'types';\n\n\nexport function routerClassFactory(options: WidgetOptions) {\n  let Router: RouterConstructor;\n\n  // V1 (\"classic\") flow will load under these conditions:\n  const v1DefaultFlow = (!options.stateToken && !options.clientId && !options.proxyIdxResponse); // Default entry flow on okta-hosted login page\n  const v1StateTokenFlow = options.stateToken && Util.isV1StateToken(options.stateToken); // Resuming a flow on okta-hosted login page\n  const v1AuthFlow = (options.clientId && options.useClassicEngine === true); // Self hosted widget can set the `useClassicEngine` option to use V1Router\n\n  if (v1DefaultFlow || v1StateTokenFlow || v1AuthFlow) {\n    Router = V1Router;\n  } else {\n    Router = V2Router;\n  }\n  return Router;\n}\n"],"names":["routerClassFactory","options","Router","v1DefaultFlow","stateToken","clientId","proxyIdxResponse","v1StateTokenFlow","Util","isV1StateToken","v1AuthFlow","useClassicEngine","V1Router","V2Router"],"mappings":";;;;AACA;AAQO,SAASA,kBAAT,CAA4BC,OAA5B,EAAoD;AACzD,EAAIC,IAAAA,MAAJ,CADyD;;AAIzD,EAAA,MAAMC,aAAa,GAAI,CAACF,OAAO,CAACG,UAAT,IAAuB,CAACH,OAAO,CAACI,QAAhC,IAA4C,CAACJ,OAAO,CAACK,gBAA5E,CAJyD;;AAKzD,EAAA,MAAMC,gBAAgB,GAAGN,OAAO,CAACG,UAAR,IAAsBI,IAAI,CAACC,cAAL,CAAoBR,OAAO,CAACG,UAA5B,CAA/C,CALyD;;AAMzD,EAAA,MAAMM,UAAU,GAAIT,OAAO,CAACI,QAAR,IAAoBJ,OAAO,CAACU,gBAAR,KAA6B,IAArE,CANyD;;AAQzD,EAAA,IAAIR,aAAa,IAAII,gBAAjB,IAAqCG,UAAzC,EAAqD;AACnDR,IAAAA,MAAM,GAAGU,QAAT,CAAA;AACD,GAFD,MAEO;AACLV,IAAAA,MAAM,GAAGW,YAAT,CAAA;AACD,GAAA;;AACD,EAAA,OAAOX,MAAP,CAAA;AACD;;;;"}