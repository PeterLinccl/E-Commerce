{"version":3,"file":"classic.js","sources":["../../../../src/authClient/classic.ts"],"sourcesContent":["// Classic supports only Authn pipelines\nimport {\n  createOktaAuthOAuth,\n  mixinAuthn,\n  PKCETransactionMeta,\n  OAuthStorageManagerInterface,\n  createOAuthStorageManager,\n  OktaAuthOAuthOptions,\n  createOAuthOptionsConstructor,\n  createTransactionManager\n} from '@okta/okta-auth-js';\n\n// okta-auth-js supports a mixin pattern that allows us to compose a custom version containing only the code we need\n// build an AuthJS client that supports only the Classic engine\n\ntype M = PKCETransactionMeta;\ntype S = OAuthStorageManagerInterface<M>;\ntype O = OktaAuthOAuthOptions;\n\nconst OptionsConstructor = createOAuthOptionsConstructor();\nconst StorageManager = createOAuthStorageManager<M>();\nconst TransactionManager = createTransactionManager<M, S>();\n\n// Start with OAuth as base\nconst OktaAuthOAuth = createOktaAuthOAuth<M, S, O>(StorageManager, OptionsConstructor, TransactionManager);\n\n// Mixin Authn support\nconst OktaAuth = mixinAuthn(OktaAuthOAuth);\n\nexport { OktaAuth };\n"],"names":["OptionsConstructor","createOAuthOptionsConstructor","StorageManager","createOAuthStorageManager","TransactionManager","createTransactionManager","OktaAuthOAuth","createOktaAuthOAuth","OktaAuth","mixinAuthn"],"mappings":";;AAAA;AAaA;;AAMA,MAAMA,kBAAkB,GAAGC,6BAA6B,EAAxD,CAAA;AACA,MAAMC,cAAc,GAAGC,yBAAyB,EAAhD,CAAA;AACA,MAAMC,kBAAkB,GAAGC,wBAAwB,EAAnD;;AAGA,MAAMC,aAAa,GAAGC,mBAAmB,CAAUL,cAAV,EAA0BF,kBAA1B,EAA8CI,kBAA9C,CAAzC;;AAGA,MAAMI,QAAQ,GAAGC,UAAU,CAACH,aAAD;;;;"}